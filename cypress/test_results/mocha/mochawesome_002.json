{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 0,
    "pending": 0,
    "failures": 6,
    "start": "2025-02-16T23:29:46.031Z",
    "end": "2025-02-16T23:29:46.240Z",
    "duration": 209,
    "testsRegistered": 6,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3cc53e64-ecd1-431c-9943-d0460877fcae",
      "title": "",
      "fullFile": "cypress\\e2e\\Trello\\testAPI.api.cy.js",
      "file": "cypress\\e2e\\Trello\\testAPI.api.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ea78be7c-b4f9-4ee4-972b-976cb963ff13",
          "title": "API Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC1: REQUEST de Método GET a la API de TRELLO para OBTENER CARD1",
              "fullTitle": "API Tests TC1: REQUEST de Método GET a la API de TRELLO para OBTENER CARD1",
              "timedOut": null,
              "duration": 18,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.api({\n  method: 'GET',\n  url: 'https://api.trello.com/1/cards/' + card1,\n  qs: {\n    key: key,\n    token: token\n  }\n}).then(response => {\n  expect(response).to.be.an('object');\n  expect(response.status).to.eql(200);\n});",
              "err": {
                "message": "TypeError: cy.api is not a function",
                "estack": "TypeError: cy.api is not a function\n    at Context.eval (webpack://dux/./cypress/e2e/Trello/testAPI.api.cy.js:13:19)",
                "diff": null
              },
              "uuid": "56225337-7095-4e4d-ac00-84f5973091f7",
              "parentUUID": "ea78be7c-b4f9-4ee4-972b-976cb963ff13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC2: REQUEST de Método GET a la API de TRELLO para OBTENER CARD2",
              "fullTitle": "API Tests TC2: REQUEST de Método GET a la API de TRELLO para OBTENER CARD2",
              "timedOut": null,
              "duration": 11,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.api({\n  method: 'GET',\n  url: 'https://api.trello.com/1/cards/' + card2,\n  qs: {\n    key: key,\n    token: token\n  }\n}).then(response => {\n  expect(response).to.be.an('object');\n  expect(response.status).to.eql(200);\n});",
              "err": {
                "message": "TypeError: cy.api is not a function",
                "estack": "TypeError: cy.api is not a function\n    at Context.eval (webpack://dux/./cypress/e2e/Trello/testAPI.api.cy.js:30:19)",
                "diff": null
              },
              "uuid": "d283322c-f1cb-4717-b2eb-6653c9d49ebf",
              "parentUUID": "ea78be7c-b4f9-4ee4-972b-976cb963ff13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC3: REQUEST de Método POST a la API de TRELLO para CREAR UNA SEGUNDA CARD",
              "fullTitle": "API Tests TC3: REQUEST de Método POST a la API de TRELLO para CREAR UNA SEGUNDA CARD",
              "timedOut": null,
              "duration": 9,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.api({\n  method: 'POST',\n  url: 'https://api.trello.com/1/cards',\n  qs: {\n    key: key,\n    token: token,\n    idList: listA,\n    name: 'Segunda Card'\n  }\n}).then(response => {\n  expect(response).to.be.an('object');\n  expect(response.status).to.eql(200);\n  expect(response.body.name).to.eql('Segunda Card');\n  cardID = response.body.id;\n});",
              "err": {
                "message": "TypeError: cy.api is not a function",
                "estack": "TypeError: cy.api is not a function\n    at Context.eval (webpack://dux/./cypress/e2e/Trello/testAPI.api.cy.js:45:19)",
                "diff": null
              },
              "uuid": "6ad32117-e9f6-442d-a2ca-d8ee6f4d8b7f",
              "parentUUID": "ea78be7c-b4f9-4ee4-972b-976cb963ff13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC4: REQUEST de Método POST a la API de TRELLO para CREAR UNA TERCERA CARD",
              "fullTitle": "API Tests TC4: REQUEST de Método POST a la API de TRELLO para CREAR UNA TERCERA CARD",
              "timedOut": null,
              "duration": 7,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.api({\n  method: 'POST',\n  url: 'https://api.trello.com/1/cards',\n  qs: {\n    key: key,\n    token: token,\n    idList: listA,\n    name: 'Tercera Card'\n  }\n}).then(response => {\n  expect(response).to.be.an('object');\n  expect(response.status).to.eql(200);\n  expect(response.body.name).to.eql('Tercera Card');\n  cardID = response.body.id;\n});",
              "err": {
                "message": "TypeError: cy.api is not a function",
                "estack": "TypeError: cy.api is not a function\n    at Context.eval (webpack://dux/./cypress/e2e/Trello/testAPI.api.cy.js:64:19)",
                "diff": null
              },
              "uuid": "dd61f9db-b142-41c4-be7d-925c829949d1",
              "parentUUID": "ea78be7c-b4f9-4ee4-972b-976cb963ff13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC5: REQUEST de Método PUT a la API de TRELLO para EDITAR CARD1",
              "fullTitle": "API Tests TC5: REQUEST de Método PUT a la API de TRELLO para EDITAR CARD1",
              "timedOut": null,
              "duration": 7,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.api({\n  method: 'PUT',\n  url: 'https://api.trello.com/1/cards/' + card1,\n  qs: {\n    key: key,\n    token: token,\n    name: 'Primera card editada por Cypress',\n    desc: 'Esto es una descripción para editar la Card previamente creada'\n  },\n  body: {\n    cover: {\n      color: 'green',\n      brightness: 'dark',\n      size: 'full'\n    }\n  }\n}).then(({\n  body\n}) => {\n  expect(body).to.be.an('object');\n  expect(body.id).to.eql(card1);\n  expect(body.name).to.eql('Primera card editada por Cypress');\n  expect(body.desc).to.include('Esto es una descripción');\n  expect(body.cover).to.be.an('object').and.to.include({\n    color: 'green'\n  });\n});",
              "err": {
                "message": "TypeError: cy.api is not a function",
                "estack": "TypeError: cy.api is not a function\n    at Context.eval (webpack://dux/./cypress/e2e/Trello/testAPI.api.cy.js:84:19)",
                "diff": null
              },
              "uuid": "ed4215cc-8474-4dfb-a01a-239391a8750d",
              "parentUUID": "ea78be7c-b4f9-4ee4-972b-976cb963ff13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC4: REQUEST de Método DELETE a la API de TRELLO para ELIMINAR CARD2",
              "fullTitle": "API Tests TC4: REQUEST de Método DELETE a la API de TRELLO para ELIMINAR CARD2",
              "timedOut": null,
              "duration": 7,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.api({\n  method: 'DELETE',\n  url: 'https://api.trello.com/1/cards/' + card2,\n  qs: {\n    token: token\n  }\n}).then(response => {\n  expect(response.body.limits).to.be.empty;\n  expect(response.status).to.eql(200);\n});",
              "err": {
                "message": "TypeError: cy.api is not a function",
                "estack": "TypeError: cy.api is not a function\n    at Context.eval (webpack://dux/./cypress/e2e/Trello/testAPI.api.cy.js:114:19)",
                "diff": null
              },
              "uuid": "973cf126-bc6b-4c7f-a579-aa0ec0aa483c",
              "parentUUID": "ea78be7c-b4f9-4ee4-972b-976cb963ff13",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "56225337-7095-4e4d-ac00-84f5973091f7",
            "d283322c-f1cb-4717-b2eb-6653c9d49ebf",
            "6ad32117-e9f6-442d-a2ca-d8ee6f4d8b7f",
            "dd61f9db-b142-41c4-be7d-925c829949d1",
            "ed4215cc-8474-4dfb-a01a-239391a8750d",
            "973cf126-bc6b-4c7f-a579-aa0ec0aa483c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 59,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/test_results/mocha",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}